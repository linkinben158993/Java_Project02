CREATE DATABASE 1712267_QuanLySinhVien;
USE 1712267_QuanLySinhVien;

-- DROP DATABASE 1712267_QuanLySinhVien;


-- Tables
CREATE TABLE IF NOT EXISTS QUYEN(
	MA_QUYEN INT AUTO_INCREMENT,
    TEN_QUYEN NVARCHAR(20) NOT NULL UNIQUE,
    MIEU_TA NVARCHAR(40) NOT NULL,
    CONSTRAINT PK_QUYEN PRIMARY KEY (MA_QUYEN)
);

CREATE TABLE IF NOT EXISTS GIOITINH(
	MA_GIOITINH INT AUTO_INCREMENT,
    TEN_GIOITINH NVARCHAR(20) NOT NULL UNIQUE,
    CONSTRAINT PK_GIOITINH PRIMARY KEY (MA_GIOITINH)
);

CREATE TABLE IF NOT EXISTS LOP(
	LOP_NO INT AUTO_INCREMENT,
	MA_LOP NVARCHAR(8) NOT NULL UNIQUE,
    TEN_LOP NVARCHAR(40),
    MIEU_TA TEXT,
    CONSTRAINT PK_LOP PRIMARY KEY (LOP_NO)
);

CREATE TABLE IF NOT EXISTS SINHVIEN(
	SINHVIEN_NO INT AUTO_INCREMENT,
    
    MA_SINHVIEN VARCHAR(10) NOT NULL UNIQUE, -- Tên đăng nhập
    PASSWORD_SINHVIEN VARCHAR(100),
    
    TEN_SINHVIEN NVARCHAR(80) NOT NULL,
    CMND_SINHVIEN VARCHAR(10) NOT NULL UNIQUE,
    
    GIOITINH_SINHVIEN  NVARCHAR(20) NOT NULL,
    MALOP_SINHVIEN NVARCHAR(8) NOT NULL,
    MA_QUYEN INT NOT NULL DEFAULT (2),
    CONSTRAINT PK_SINHVIEN PRIMARY KEY (SINHVIEN_NO),
    CONSTRAINT FK_GIOITINH_SINHVIEN FOREIGN KEY (GIOITINH_SINHVIEN)
    REFERENCES GIOITINH(TEN_GIOITINH),
    CONSTRAINT FK_SINHVIEN_MALOP FOREIGN KEY (MALOP_SINHVIEN)
    REFERENCES LOP(MA_LOP),
    CONSTRAINT FK_SINHVIEN_QUYEN FOREIGN KEY (MA_QUYEN)
    REFERENCES QUYEN(MA_QUYEN)
);

CREATE TABLE IF NOT EXISTS GIAOVU(
	GIAOVU_NO INT AUTO_INCREMENT,
    
    MA_GIAOVU VARCHAR(10) NOT NULL UNIQUE,
    PASSWORD_GIAOVU VARCHAR(100),
    
    TEN_GIAOVU NVARCHAR(80) NOT NULL,
    CMND_GIAOVU VARCHAR(10) NOT NULL UNIQUE,
    
    GIOITINH_GIAOVU  NVARCHAR(20) NOT NULL,
    MA_QUYEN INT NOT NULL DEFAULT(1),
    CONSTRAINT PK_GIAOVU PRIMARY KEY (GIAOVU_NO),
    CONSTRAINT FK_GIOITINH_GIAOVU FOREIGN KEY (GIOITINH_GIAOVU)
    REFERENCES GIOITINH(TEN_GIOITINH),
    CONSTRAINT FK_GIAOVU_QUYEN FOREIGN KEY (MA_QUYEN)
    REFERENCES QUYEN(MA_QUYEN)
);

CREATE TABLE IF NOT EXISTS MON(
	MON_NO INT NOT NULL AUTO_INCREMENT,
	MA_MON VARCHAR(10) UNIQUE,
    TEN_MON NVARCHAR(50),
    NGAY_MO DATE,

    CONSTRAINT PK_MON PRIMARY KEY (MON_NO)
);

CREATE TABLE IF NOT EXISTS DANHSACHLOP_MON(
	DANHSACHLOP_NO INT NOT NULL AUTO_INCREMENT,
    MA_MON VARCHAR(10),
    MA_LOP NVARCHAR(8) NOT NULL,
	PHONG_HOC NVARCHAR(20),
    
    CONSTRAINT PK_DANHSACHLOP_MON PRIMARY KEY (DANHSACHLOP_NO),
    CONSTRAINT FK_DANHSACHLOP_MON FOREIGN KEY (MA_MON)
    REFERENCES MON(MA_MON),
    CONSTRAINT FK_DANHSACHLOP_MON_LOP FOREIGN KEY (MA_LOP)
    REFERENCES LOP(MA_LOP)
    
);
-- 2 lớp có thể trùng mã môn, nhưng 1 lớp không thể có 2 mã môn
ALTER TABLE DANHSACHLOP_MON ADD UNIQUE U_DANHSACHLOP_MON (MA_MON, MA_LOP);
ALTER TABLE DANHSACHLOP_MON ADD COLUMN MALOP_MON VARCHAR(20) UNIQUE;

CREATE TABLE IF NOT EXISTS DANHSACHSINHVIEN_MON(
	DANHSACHSINHVIEN_NO INT NOT NULL AUTO_INCREMENT,
    MA_SINHVIEN VARCHAR(10) NOT NULL,
    
    MALOP_MON VARCHAR(20),
    MA_MON VARCHAR(10),
    
    CONSTRAINT PK_DANHSACHSINHVIEN_MON PRIMARY KEY(DANHSACHSINHVIEN_NO),
    CONSTRAINT FK_DANHSACHSINHVIEN_MON FOREIGN KEY (MA_MON)
    REFERENCES MON(MA_MON),
    CONSTRAINT FK_DANHSACHSINHVIEN_SINHVIEN FOREIGN KEY (MA_SINHVIEN)
    REFERENCES SINHVIEN(MA_SINHVIEN)
);
-- SINH VIÊN CHỈ ĐƯỢC HỌC 1 LỚP, NHƯNG ĐƯỢC HỌC LẠI MÔN NHIỀU LẦN
ALTER TABLE DANHSACHSINHVIEN_MON ADD UNIQUE U_SINHVIEN_MAMON (MA_SINHVIEN, MALOP_MON);

CREATE TABLE IF NOT EXISTS DIEUCHINH_HOCPHAN(
	YEUCAU_NO INT AUTO_INCREMENT,
    NOI_DUNG TEXT,
    MA_YEUCAU INT NOT NULL, -- 1 là thêm 2 là xóa
	MALOP_MON VARCHAR(20) NOT NULL,
    MA_SINHVIEN VARCHAR(10) NOT NULL,
    
    CONSTRAINT PK_DCHP PRIMARY KEY (YEUCAU_NO),
	CONSTRAINT FK_DCHP_DSLM FOREIGN KEY (MALOP_MON)
    REFERENCES DANHSACHLOP_MON(MALOP_MON),
	CONSTRAINT FK_DCHP_SV FOREIGN KEY (MA_SINHVIEN)
    REFERENCES SINHVIEN(MA_SINHVIEN)
);

CREATE TABLE IF NOT EXISTS DIEM(
	MA_DIEM INT AUTO_INCREMENT,
    MA_MON VARCHAR(10),
    MA_SINHVIEN VARCHAR(10) NOT NULL,
    
    DIEM_GK FLOAT NOT NULL,
    DIEM_CK FLOAT NOT NULL,
    DIEM_KHAC FLOAT DEFAULT (0),
    
    CONSTRAINT PK_DIEM PRIMARY KEY (MA_DIEM),
    CONSTRAINT FK_DIEM_MON FOREIGN KEY (MA_MON)
    REFERENCES MON(MA_MON),
    CONSTRAINT FK_DIEM_SINHVIEN FOREIGN KEY (MA_SINHVIEN)
    REFERENCES SINHVIEN(MA_SINHVIEN)
);
ALTER TABLE DIEM ADD COLUMN MALOP_MON VARCHAR(20) NOT NULL;
ALTER TABLE DIEM ADD COLUMN TEN_SINHVIEN VARCHAR(80);
ALTER TABLE DIEM ADD COLUMN DIEM_TONG FLOAT NOT NULL;
ALTER TABLE DIEM ADD CONSTRAINT FK_DIEM_LOPMON
FOREIGN KEY(MALOP_MON) REFERENCES DANHSACHLOP_MON(MALOP_MON);
-- Điểm chỉ của 1 sinh viên thuộc một lớp
ALTER TABLE DIEM ADD UNIQUE U_DIEM_MLM_SV (MA_SINHVIEN, MALOP_MON);

CREATE TABLE IF NOT EXISTS PHUC_KHAO(
	PHUCKHAO_NO INT AUTO_INCREMENT,
	MA_SINHVIEN VARCHAR(10) NOT NULL,
    MALOP_MON VARCHAR(20) NOT NULL,
    
    COT_DIEM INT NOT NULL,
    DIEM_MONGMUON FLOAT NOT NULL,
    
	NOIDUNG_PHUCKHAO TEXT,
    TRANG_THAI INT,
    
    CONSTRAINT PK_PHUCKHAO PRIMARY KEY (PHUCKHAO_NO),
    CONSTRAINT FK_PHUCKHAO_DSSVMON FOREIGN KEY (MA_SINHVIEN, MALOP_MON)
    REFERENCES DANHSACHSINHVIEN_MON(MA_SINHVIEN, MALOP_MON),
    
    -- Sinh viên có thể gửi nhiều yêu cầu
    CONSTRAINT U_PHUCKHAO UNIQUE (PHUCKHAO_NO, MA_SINHVIEN, MALOP_MON)
);

-- Triggers
DROP TRIGGER IF EXISTS INSERT_SINHVIEN;
DELIMITER $$
CREATE TRIGGER INSERT_SINHVIEN
BEFORE INSERT ON SINHVIEN
FOR EACH ROW
BEGIN
	IF NEW.PASSWORD_SINHVIEN IS NULL 
		THEN
			BEGIN
				SET NEW.PASSWORD_SINHVIEN := NEW.CMND_SINHVIEN;
			END;
	END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS INSERT_GIAOVU;
DELIMITER $$
CREATE TRIGGER INSERT_GIAOVU
BEFORE INSERT ON GIAOVU
FOR EACH ROW
BEGIN
	IF NEW.PASSWORD_GIAOVU IS NULL 
		THEN
			BEGIN
				SET NEW.PASSWORD_GIAOVU := 'giaovu';
			END;
	END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS INSERT_PHUCKHAO;
DELIMITER $$
CREATE TRIGGER INSERT_PHUCKHAO
BEFORE INSERT ON PHUC_KHAO
FOR EACH ROW
BEGIN
	IF NEW.DIEM_MONGMUON > 10 OR NEW.DIEM_MONGMUON < 0
		THEN
			BEGIN
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = 'Error: Diem khong phu hop (0 -> 10)';
            END;
	END IF;
    IF NEW.COT_DIEM > 3 OR NEW.COT_DIEM < 1
		THEN
			BEGIN
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = 'Error: Cot diem khong hop le (1 -> 3)';
            END;
	END IF;
	IF NEW.TRANG_THAI IS NULL 
		THEN
			BEGIN
				SET NEW.TRANG_THAI := 0;
			END;
	END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS INSERT_DIEM;
DELIMITER $$
CREATE TRIGGER INSERT_DIEM
BEFORE INSERT ON DIEM
FOR EACH ROW
BEGIN
	IF ((SELECT COUNT(*)
		FROM DANHSACHSINHVIEN_MON DSSV_MON
        WHERE
        DSSV_MON.MA_SINHVIEN = NEW.MA_SINHVIEN AND DSSV_MON.MALOP_MON = NEW.MALOP_MON) = 0)
		THEN
			BEGIN
				SIGNAL SQLSTATE '45000'
				SET MESSAGE_TEXT = 'Error: sinh vien chua hoc mon nay!';
            END;
	END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS INSERT_DANHSACHLOP_MON_BEFORE;
DELIMITER $$
CREATE TRIGGER INSERT_DANHSACHLOP_MON_BEFORE
BEFORE INSERT ON DANHSACHLOP_MON
FOR EACH ROW
BEGIN
        IF NEW.MALOP_MON IS NULL
			THEN
				BEGIN
					SET NEW.MALOP_MON := CONCAT(NEW.MA_LOP,"-",NEW.MA_MON);
                END;
        END IF;
END$$
DELIMITER ;

DROP TRIGGER IF EXISTS INSERT_DANHSACHLOP_MON_AFTER;
DELIMITER $$
CREATE TRIGGER INSERT_DANHSACHLOP_MON
AFTER INSERT ON DANHSACHLOP_MON
FOR EACH ROW
BEGIN
		INSERT INTO DANHSACHSINHVIEN_MON (MA_SINHVIEN, MA_MON, MALOP_MON) 
        (SELECT MA_SINHVIEN, NEW.MA_MON, CONCAT(NEW.MA_LOP,"-",NEW.MA_MON)
        FROM SINHVIEN WHERE MALOP_SINHVIEN = NEW.MA_LOP);
END$$
DELIMITER ;

-- INSERT DATABASE
INSERT INTO QUYEN VALUE (1,"ROLE_LECTURER","Giảng viên.");
INSERT INTO QUYEN VALUE (2,"ROLE_STUDENT","Sinh viên.");

INSERT INTO GIOITINH VALUE (1,"Nam");
INSERT INTO GIOITINH VALUE (2,"Nữ");

INSERT INTO LOP VALUE(NULL, "17CTT1", "CNTT1CQ", "Lớp 1 khoa CNTT ĐH KHTN TP HCM");
INSERT INTO LOP VALUE(NULL, "17CTT2", "CNTT2CQ", "Lớp 2 khoa CNTT ĐH KHTN TP HCM");
INSERT INTO LOP VALUE(NULL, "17CTT3", "CNTT3CQ", "Lớp 3 khoa CNTT ĐH KHTN TP HCM");
INSERT INTO LOP VALUE(NULL, "17CTT4", "CNTT4CQ", "Lớp 4 khoa CNTT ĐH KHTN TP HCM");
INSERT INTO LOP VALUE(NULL, "17CTT5", "CNTT5CQ", "Lớp 5 khoa CNTT ĐH KHTN TP HCM");
INSERT INTO LOP VALUE(NULL, "17CTT6", "CNTT6CQ", "Lớp 6 khoa CNTT ĐH KHTN TP HCM");
INSERT INTO LOP VALUE(NULL, "18CTT1", "CNTT1CQ-18", "Lớp  khoa CNTT ĐH KHTN TP HCM");
INSERT INTO LOP VALUE(NULL, "18CTT2", "CNTT2CQ-18", "Lớp 4 khoa CNTT ĐH KHTN TP HCM");

-- INSERT NHƯ NÀY SẼ KHÔNG LẤY PASSWORD BẰNG BCRYPT
-- INSERT INTO SINHVIEN VALUE (NULL, 1712267, "$2y$12$08kravc.6hpu8DKQCizyhOtZpYv93hE87v.ODgXrBdPbnV1nPrw9G", "Nguyên Hoàng Thiên Ân", "025852371", "Nam","17CTT2",2);
-- INSERT INTO GIAOVU VALUE (NULL, 'giaovu', "$2a$12$6MUvY.FJlf0P8/AfPqPgW.VfVbxzMBKQ1y3sf7Nex4OXnwX2Pcmv.", 'Trần Văn ABCXYZ', '1357902468','Nam',1);

-- INSERT INTO MON VALUE (NULL,"CTT011","Thiết kế giao diện",NOW());
-- INSERT INTO DANHSACHLOP_MON VALUE (NULL,"CTT011","17HCB","C32");
-- INSERT INTO DANHSACHLOP_MON VALUE (NULL,"CTT011","18HCB","C31");
-- Add trước Hồ Thị E học lại môn 18HCB-CTT001
INSERT INTO DANHSACHSINHVIEN_MON VALUE (NULL,"1742005","18HCB-CTT001","CTT001");
-- TEST ĐIỀU CHỈNH HỌC PHẦN
-- YÊU CẦU THÊM
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Học cải thiện môn!", 1, "17HCB-CTT011", "1712267");
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Học cải thiện môn!", 1, "18HCB-CTT001", "1712267");
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Học cải thiện môn!", 1, "17HCB-CTT011", "1712286");
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Học cải thiện môn!", 1, "17HCB-CTT011", "1712301");
-- Hoặc add Hồ Thị E ở đây bằng chức năng điều chỉnh học phần
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Học cải thiện môn!", 1, "18HCB-CTT001", "1742005");
-- YÊU CẦU XÓA
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Thôi học!", 2, "17HCB-CTT011", "1712267");
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Thôi học!", 2, "17HCB-CTT011", "1712286");
INSERT INTO DIEUCHINH_HOCPHAN VALUE (NULL, "Thôi học!", 2, "17HCB-CTT011", "1712301");
-- TEST PHÚC KHẢO
-- YÊU CẦU PHÚC KHẢO
-- Test trigger
INSERT INTO PHUC_KHAO VALUE (NULL, "1842003 ", "18HCB-CTT001", 3, 11, "Thầy/Cô xem giúp em điểm cuối kì.", NULL);
INSERT INTO PHUC_KHAO VALUE (NULL, "1842003 ", "18HCB-CTT001", 4, 9, "Thầy/Cô xem giúp em điểm cuối kì.", NULL);


INSERT INTO PHUC_KHAO VALUE (NULL, "1742005", "18HCB-CTT001", 2, 9, "Thầy/Cô xem giúp em điểm cuối kì.", NULL);
INSERT INTO PHUC_KHAO VALUE (NULL, "1842004", "18HCB-CTT002", 2, 9, "Thầy/Cô xem giúp em điểm cuối kì.", NULL);


